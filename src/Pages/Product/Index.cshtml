@page
@model ContosoCrafts.WebSite.Pages.Product.IndexModel
@using ContosoCrafts.WebSite.Models
@{
    ViewData["Title"] = "Index page";
}

<div class="container">
    <!-- Search bar aligned to the right -->
    <form method="get" class="form-inline mb-3" style="display: flex; justify-content: flex-end;">
        <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control mr-sm-2" placeholder="Search products" style="font-family:'Century Gothic'; margin-top: 20px;">
        <button type="submit" class="btn btn-primary" style="margin-top: 20px;">Search</button>
    </form>


    <!-- First table: Display all Sport products -->
    <h1>Sports</h1>
    <table class="table table-bordered table-striped" style="background-color:lightgrey;">
        <thead>
            <tr>
                <th style="font-family:'Century Gothic';">Title</th>
                <th style="font-family:'Century Gothic';">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Products
            .Where(p => p.ProductType == ProductTypeEnum.Sport &&
            (string.IsNullOrEmpty(Model.SearchTerm) ||
            p.Title.Contains(Model.SearchTerm, StringComparison.OrdinalIgnoreCase))))
            {
                <tr>
                    <td style="font-family:'Century Gothic';">@product.Title</td>
                    <td style="font-family:'Century Gothic';">
                        <a asp-page="Read" asp-route-teamTitle="@product.Title" class="btn btn-teal">Read</a>
                        <a asp-page="Update" asp-route-id="@product.Id" class="btn btn-warning">Update</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Second table: Display all Team products -->
    <h1>Teams</h1>
    <a asp-page="Create" class="btn btn-success mb-3">Create New Team</a>

    <table class="table table-bordered table-striped" style="background-color:lightgrey;">
        <thead>
            <tr>
                <th style="font-family:'Century Gothic';">Title</th>
                <th style="font-family:'Century Gothic';">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Products
            .Where(p => p.ProductType == ProductTypeEnum.Team &&
            (string.IsNullOrEmpty(Model.SearchTerm) ||
            p.Title.Contains(Model.SearchTerm, StringComparison.OrdinalIgnoreCase))))
            {
                <tr>
                    <td style="font-family:'Century Gothic';">@product.Title</td>
                    <td style="font-family:'Century Gothic';">
                        <a asp-page="Read" asp-route-teamTitle="@product.Title" class="btn btn-teal">Read</a>
                        <a asp-page="Update" asp-route-id="@product.Id" class="btn btn-warning">Update</a>
                        <a asp-page="Delete" asp-route-id="@product.Id" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
